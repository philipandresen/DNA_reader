function [ location] = find_badpoint(cell_array,cursor,upordown)
%find_badpoint by Philip Andresen (Version 23:AUGUST:2011)
%INTENDED CALLER: DNA_reader
%PURPOSE: This program searches the string outputted by correlate_codons.m
%   but is called in DNA_reader.m. It searches for any not-'good' strings
%   in the specified direction from the cursor position and returns the
%   location of the next found bad point.
%INPUTS:
%   Cell_array: The cell array generated by correlate_codons.m
%   Cursor: The location from which the search will begin
%   upordown:('up'/'down') Which direction to search in the array.
%OUTPUTS:
%   location: The index number of the next found bad string.
%CHANGELOG:
%   Changes have not been logged as of (23:AUGUST:2011)
%External function dependencies:
%   None
%SPECIAL NOTES: 
%   Implicit dependence on correlate_codons.m
badpointnumber=0;
location=1;
startloc=1;
endloc=length(cell_array);
if strcmp(upordown,'down'); startloc=cursor+1; end;
if strcmp(upordown,'up'); endloc=cursor-1; end;
if strcmp(upordown,'up') && endloc==0; 
   location=length(cell_array); return;
end;
for i=startloc:endloc;
    if strcmp(cell_array{i},'No Correlation')||strcmp(cell_array{i},'Silent Mut.')
        badpointnumber=badpointnumber+1;
        location=i;
        if strcmp(upordown,'down'); return; end;
    end;
end;

end

